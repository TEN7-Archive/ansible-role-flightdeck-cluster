---
- name: Create ingress
  k8s:
    state: "{{ _ingress.state | default('present') }}"
    definition: |
      apiVersion: networking.k8s.io/v1beta1
      kind: Ingress
      metadata:
        name: "{{ _ingress.name | default('ingress') }}"
        annotations:
          # GKE hosted clusters use the following:
          ingress.kubernetes.io/app-root: /
          ingress.kubernetes.io/affinity: cookie
          # Enable cores
          ingress.kubernetes.io/enable-cors: "true"
          nginx.ingress.kubernetes.io/enable-cors: "true"
          # Increase the file upload limit
          ingress.kubernetes.io/proxy-body-size: "{{ _ingress.maxBodySize | default('128m') }}"
          nginx.ingress.kubernetes.io/proxy-body-size: "{{ _ingress.maxBodySize | default('128m') }}"
          # Increase the proxy timeouts
          nginx.ingress.kubernetes.io/proxy-send-timeout: "{{ _ingress.sendTimeout | default('300') }}"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "{{ _ingress.readTimeout | default('300') }}"
      {% if _ingress.rewriteTarget is defined %}
          nginx.ingress.kubernetes.io/rewrite-target: "{{ _ingress.rewriteTarget }}"
      {% endif %}
      {% if _ingress.auth is defined %}
          nginx.ingress.kubernetes.io/auth-type: "{{ _ingress.auth.type | default('basic') }}"
          nginx.ingress.kubernetes.io/auth-secret: "{{ _ingress.auth.secret }}"
          nginx.ingress.kubernetes.io/auth-realm: "{{ _ingress.auth.message | default('Please enter your login.') }}"
      {% endif %}
      {% if _ingress.tlsIssuer is defined %}
          kubernetes.io/ingress.class: nginx
          cert-manager.io/cluster-issuer: {{ _ingress.tlsIssuer }}
      {% endif %}
      {% if _ingress.permanentRedirect is defined %}
          nginx.ingress.kubernetes.io/permanent-redirect: {{ _ingress.permanentRedirect }}
      {% endif %}
          nginx.ingress.kubernetes.io/use-regex: "{{ _ingress.useRegex | default(true) | ternary('true', 'false') }}"
          nginx.ingress.kubernetes.io/proxy-buffer-size: "{{ _ingress.proxyBufferSize | default('16k') }}"
      spec:
      {% if _ingress.tlsIssuer is defined %}
        kubernetes.io/ingress.class: {{ _ingress.ingressClassName | default('nginx') }}
      {% endif %}
      {% if _ingress.tls is defined %}
        tls:
      {% for _tls in _ingress.tls %}
          - secretName: "{{ _tls.secret }}"
      {% if _tls.hosts is defined %}
            hosts:
      {% for _host in _tls.hosts %}
              - "{{ _host }}"
      {% endfor %}
      {% endif %}
      {% endfor %}
      {% endif %}
      {% if _ingress.rules %}
        rules:
      {% for _rule in _ingress.rules %}
          - host: "{{ _rule.host }}"
      {% if _rule.paths is defined %}
            http:
              paths:
      {% for _path in _rule.paths %}
                - path: "{{ _path.path | default('/') }}"
                  pathType: "{{ _path.pathType | default('ImplementationSpecific') }}"
                  backend:
                    serviceName: "{{ _path.backend | default('web') }}"
                    servicePort: {{ _path.port | default('6081') }}
      {% endfor %}
      {% endif %}
      {% endfor %}
      {% endif %}
      {% if _ingress.default is defined %}
        backend:
          serviceName: "{{ _ingress.default.backend | default('web') }}"
          servicePort: {{ _ingress.default.port | default('6081') }}
      {% endif %}
    kubeconfig: "{{ flightdeck_cluster_kubeconfig | default(omit) }}"
    namespace: "{{ flightdeck_cluster.namespace | default('default') }}"
